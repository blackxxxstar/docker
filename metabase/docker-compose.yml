services:
  metabase:
    image: metabase/metabase
    container_name: metabase
    hostname: metabase
    volumes:
      - /dev/urandom:/dev/random:ro
    environment:
      MB_DB_HOST: ${DB_HOST}
      MB_DB_TYPE: ${DB_TYPE}
      MB_DB_DBNAME: ${DB_DBNAME}
      MB_DB_PORT: ${DB_PORT}
      MB_DB_USER: ${DB_USER}
      MB_DB_PASS: ${DB_PASS}
    networks:
      - proxy
      - backend
    healthcheck:
      test: curl --fail -I http://localhost:3000/api/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 5
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.services.metabase.loadbalancer.server.port=3000
      - traefik.http.routers.metabase.rule=Host(`dummydomain.com`)
      - traefik.http.routers.metabase.entrypoints=websecure
      - traefik.http.routers.metabase.tls.certresolver=myresolver

  metabase_db:
    image: postgres
    container_name: metabase_db
    hostname: metabase_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_DBNAME}
      POSTGRES_PASSWORD: ${DB_PASS}
    networks:
      - backend

networks:
  proxy:
    external: true
  backend:
    external: true
